{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","text","author","data","handleClick","bind","a","fetch","response","json","ran","Math","floor","random","length","this","setState","quotecolor","ran2","rancolor","$","css","id","NQButton","React","Component","QuotePage","href","className","onClick","AppWrapper","ReactDOM","render","document","getElementById"],"mappings":"2PAIaA,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,OAAQ,GACRC,KAAM,IAER,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPF,EADrB,4FAWE,gCAAAC,EAAA,sEAGyBC,MAAM,+BAH/B,cAGQC,EAHR,gBAIqBA,EAASC,OAJ9B,OAIQN,EAJR,OAKMO,EAAMC,KAAKC,MAAMD,KAAKE,SAAWV,EAAKW,QAC1CC,KAAKC,SAAS,CACZf,KAAME,EAAKO,GAAKT,KAChBC,OAAQC,EAAKO,GAAKR,OAClBC,KAAMA,IATV,gDAXF,sHAwBE,sCAAAG,EAAA,sEAGyBC,MAAM,+BAH/B,cAGQC,EAHR,gBAIqBA,EAASC,OAJ9B,OAIQN,EAJR,OAKMO,EAAMC,KAAKC,MAAMD,KAAKE,SAAWV,EAAKW,QAC1CC,KAAKC,SAAS,CACZf,KAAMc,KAAKf,MAAMG,KAAKO,GAAKT,KAC3BC,OAAQa,KAAKf,MAAMG,KAAKO,GAAKR,SAGzBe,EAAa,CACjB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGIC,EAAOP,KAAKC,MAAMD,KAAKE,UAAYI,EAAWH,OAAS,EAAI,GAAK,GAEhEK,EAAWF,EAAWC,GAE5BE,KAAE,WACAA,IAAE,QAAQC,IAAI,mBAAoBF,GAClCC,IAAE,cAAcC,IAAI,QAASF,GAC7BC,IAAE,UAAUC,IAAI,mBAAoBF,GACpCC,IAAE,UAAUC,IAAI,QAAS,SACzBD,IAAE,UAAUC,IAAI,QAASF,GACzBC,IAAE,YAAYC,IAAI,QAASF,GAC3BC,IAAE,YAAYC,IAAI,QAASF,GAC3BC,IAAE,MAAMC,IAAI,WAAY,WAvC5B,iDAxBF,0EAmEE,WACE,OACE,0BAASC,GAAG,mBAAZ,UACE,qBAAKA,GAAG,YAAR,SACE,cAAC,EAAD,CACEA,GAAG,YACHrB,KAAMc,KAAKf,MAAMC,KACjBC,OAAQa,KAAKf,MAAME,OACnBqB,SAAUR,KAAKX,gBAGnB,mBAAGkB,GAAG,OAAN,6EA9ER,GAAyBE,IAAMC,WAsFzBC,EAAY,SAAC3B,GACjB,OACE,sBAAKuB,GAAG,aAAR,UACE,oBAAIA,GAAG,OAAP,SAAevB,EAAME,OACrB,mBAAGqB,GAAG,SAAN,SAAgB,OAASvB,EAAMG,SAC/B,sBAAKoB,GAAG,kBAAR,UACE,sBAAKA,GAAG,QAAR,UACE,mBAAGA,GAAG,cAAcK,KAAK,2BAAzB,SACE,mBAAGL,GAAG,UAAUM,UAAU,qBAE5B,mBAAGD,KAAK,aAAR,SACE,mBAAGL,GAAG,UAAUM,UAAU,8BAG9B,wBAAQN,GAAG,YAAYM,UAAU,MAAMC,QAAS9B,EAAMwB,SAAtD,8BAiBOO,E,4JATb,WACE,OACE,yBAASR,GAAG,aAAZ,SACE,cAAC,EAAD,CAAKA,GAAG,c,GAJSE,IAAMC,WC3G/BM,IAASC,OAAO,cAAC,EAAD,IAAgBC,SAASC,eAAe,W","file":"static/js/main.0630317c.chunk.js","sourcesContent":["import React from 'react'\n//import './App.css'\nimport $ from 'jquery'\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      author: \"\",\n      data: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async componentDidMount() { \n    // componentDidMount() is called after react first renders\n    // if editing state and rerendering, how does it avoid loops?\n    const response = await fetch(\"https://type.fit/api/quotes\");\n    const data = await response.json();\n    let ran = Math.floor(Math.random() * data.length);\n    this.setState({\n      text: data[ran].text,\n      author: data[ran].author,\n      data: data\n    });   \n  }\n\n  async handleClick() {\n    // Improvements for next vs,\n    // how to avoid fetching again with every click\n    const response = await fetch(\"https://type.fit/api/quotes\");\n    const data = await response.json();\n    let ran = Math.floor(Math.random() * data.length);\n    this.setState({\n      text: this.state.data[ran].text,\n      author: this.state.data[ran].author\n    });\n    \n    const quotecolor = [\n      \"#36486b\",\n      \"#618685\",\n      \"#4040a1\",\n      \"#f18973\",\n      \"#bc5a45\",\n      \"#50394c\",\n      \"#80ced6\",\n      \"#ffef96\",\n      \"#405d27\",\n      \"#b5e7a0\",\n      \"#feb236\",\n      \"#d64161\",\n      \"#ff7b25\"\n    ];\n    \n    const ran2 = Math.floor(Math.random() * (quotecolor.length - 1 - 0) + 0);\n    \n    const rancolor = quotecolor[ran2];    \n\n    $(function(){\n      $(\"body\").css(\"background-color\", rancolor);\n      $(\"#quote-box\").css(\"color\", rancolor);      \n      $(\"button\").css(\"background-color\", rancolor);\n      $(\"button\").css(\"color\", \"white\");            \n      $(\"#icons\").css(\"color\", rancolor);\n      $(\"#tw-icon\").css(\"color\", rancolor); \n      $(\"#tb-icon\").css(\"color\", rancolor);\n      $(\"h2\").css(\"fontSize\", \"50px\");\n    });     \n  }  \n  \n  render() {\n    return (\n      <section id=\"sectionContainer\">\n        <div id=\"quote-box\">\n          <QuotePage\n            id=\"quotepage\"\n            text={this.state.text}\n            author={this.state.author}\n            NQButton={this.handleClick}\n          />\n        </div>\n        <p id=\"sign\">\n          by jasonr27 for freeCodeCamp.org Front End Certification\n        </p>\n      </section>\n    );\n  }\n}\n\nconst QuotePage = (props) => {\n  return (\n    <div id=\"quotestand\">\n      <h1 id=\"text\">{props.text}</h1>\n      <p id=\"author\">{\"--- \" + props.author}</p>\n      <div id=\"iconsButtonLine\">\n        <div id=\"icons\">\n          <a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\">\n            <i id=\"tw-icon\" className=\"fab fa-twitter\"></i>\n          </a>\n          <a href=\"tumblr.com\">\n            <i id=\"tb-icon\" className=\"fab fa-tumblr-square\"></i>\n          </a>\n        </div>\n        <button id=\"new-quote\" className=\"btn\" onClick={props.NQButton}>\n          New Quote\n        </button>\n      </div>\n    </div>\n  );\n};\nclass AppWrapper extends React.Component {\n  render() {\n    return (\n      <section id=\"AppWrapper\">\n        <App id=\"RQM\" />\n      </section>\n    );\n  }\n}\n\nexport default AppWrapper\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport AppWrapper from \"./App\"\r\n\r\nReactDOM.render(<AppWrapper />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}